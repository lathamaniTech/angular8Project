{"version":3,"file":"ngx-super-dashboard.js","sources":["ng://ngx-super-dashboard/lib/ngx-super-dashboard.service.ts","ng://ngx-super-dashboard/lib/ngx-super-dashboard.component.ts","ng://ngx-super-dashboard/lib/ngx-super-dashboard.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSuperDashboardService {\n\n  constructor() { }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ChartSelectionChangedEvent, ChartType } from \"angular-google-charts\";\n\n@Component({\n  selector: \"lib-ngx-super-dashboard\",\n  template: `\n    <div class=\"fields-bar\">\n      <form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmitForm()\">\n        <div class=\"grid-label-bar\" *ngIf=\"dynamicForm.value.length != 0\">\n          <ng-container\n            *ngFor=\"let field of dynamicFormFieldData; let i = index\"\n          >\n            <div\n              [ngClass]=\"field.className ? field.className + ' list' : 'list'\"\n              *ngIf=\"\n                field.lovDataList && field.lovDataList.length > 0;\n                else dynamicNonDropdown\n              \"\n            >\n              <div class=\"lable\">{{ field.lable }}<span>-</span></div>\n\n              <select\n                formControlName=\"{{ field.formControlKey }}\"\n                id=\"{{ field.formControlKey }}\"\n                (change)=\"seletedValue($event)\"\n                placeholder=\"Select\"\n              >\n                <option selected value=\"\">Select</option>\n                <option\n                  [value]=\"item.value\"\n                  *ngFor=\"let item of field.lovDataList\"\n                >\n                  {{ item.name }}\n                </option>\n              </select>\n            </div>\n\n            <ng-template #dynamicNonDropdown>\n              <div\n                [ngClass]=\"field.className ? field.className + ' list' : 'list'\"\n              >\n                <div class=\"lable\">{{ field.lable }}<span>-</span></div>\n                <input\n                  type=\"{{ field.type }}\"\n                  class=\"picker\"\n                  formControlName=\"{{ field.formControlKey }}\"\n                  id=\"{{ field.formControlKey }}\"\n                  (change)=\"seletedValue($event)\"\n                  placeholder=\"Select\"\n                />\n              </div>\n            </ng-template>\n          </ng-container>\n\n          <div class=\"list lastList\">\n            <div class=\"lable\">\n              *Accounts in Actuals <br />\n              *Ammount in Lakhs\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div class=\"grid-container\">\n      <div\n        class=\"grid-area-countCards\"\n        *ngIf=\"cardConfig && cardConfig.length > 0\"\n      >\n        <ng-container *ngFor=\"let item of cardConfig; let j = index\">\n          <div\n            [ngClass]=\"\n              item.className\n                ? item.className + ' card card-border-left'\n                : 'card card-border-left'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ item.title }}</h3>\n            </div>\n            <div class=\"card-content\">\n              <p>{{ item.value }}</p>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n\n      <div\n        [ngClass]=\"\n          gridTwoConfig && gridTwoConfig !== null && gridTwoConfig !== undefined\n            ? 'grid-area-chart'\n            : 'grid-area-chart grid-area-expand'\n        \"\n      >\n        <ng-container *ngFor=\"let chart of chartsConfig\">\n          <div\n            [ngClass]=\"\n              chart.className\n                ? chart.className + ' card card-border-bottom'\n                : 'card card-border-bottom'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ chart.cardTitle }}</h3>\n            </div>\n            <google-chart\n              style=\"width: 100%; height: 100%\"\n              [type]=\"chart.type\"\n              [data]=\"chart.chartData\"\n              [columns]=\"chart.chartOptionData.myColumns\"\n              [options]=\"chart.chartOptionData.chartOptions\"\n              (select)=\"selectedChart($event, chart.type)\"\n            ></google-chart>\n          </div>\n        </ng-container>\n\n        <ng-container\n          *ngIf=\"\n            gridOneConfig && gridOneConfig != null && gridOneConfig != undefined\n          \"\n        >\n          <div\n            [ngClass]=\"\n              gridOneConfig.className\n                ? gridOneConfig.className + 'card card-border-bottom'\n                : 'card card-border-bottom'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ gridOneConfig.cardTitle }}</h3>\n            </div>\n            <div class=\"card-content\">\n              <table class=\"grid-table\">\n                <thead>\n                  <th *ngFor=\"let head of gridOneConfig.tableColumnHeadings\">\n                    {{ head }}\n                  </th>\n                </thead>\n                <tbody>\n                  <ng-container *ngIf=\"gridOneConfig.tableData; else noData\">\n                    <tr\n                      *ngFor=\"\n                        let item of gridOneConfig.tableData;\n                        let i = index\n                      \"\n                    >\n                      <td *ngFor=\"let val of gridOneConfig.tableDataKey\">\n                        {{ item[val] }}\n                      </td>\n                    </tr>\n                  </ng-container>\n                  <ng-template #noData>\n                    <tr>\n                      <td colspan=\"5\">No Data</td>\n                    </tr>\n                  </ng-template>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div\n        class=\"grid-area-tableRecords\"\n        *ngIf=\"\n          gridTwoConfig && gridTwoConfig !== null && gridTwoConfig !== undefined\n        \"\n      >\n        <div\n          [ngClass]=\"\n            gridTwoConfig.className\n              ? gridTwoConfig.className + ' card card-border-top'\n              : 'card card-border-top'\n          \"\n        >\n          <div class=\"card-header\">\n            <h3>{{ gridTwoConfig.title }}</h3>\n          </div>\n          <div class=\"card-content\">\n            <table class=\"grid-table\">\n              <thead>\n                <th *ngFor=\"let head of gridTwoConfig.tableHeading\">\n                  {{ head }}\n                </th>\n              </thead>\n              <ng-container\n                *ngIf=\"\n                  gridTwoConfig.tableData && gridTwoConfig.tableData.length > 0\n                \"\n              >\n                <tbody>\n                  <tr *ngFor=\"let parent of gridTwoConfig.tableData\">\n                    <td>\n                      {{ parent.parentName }}\n                    </td>\n                    <td\n                      [attr.colspan]=\"gridTwoConfig.tableDataKey.length\"\n                      class=\"colspan\"\n                    >\n                      <tr *ngFor=\"let item of parent.childData\">\n                        <td *ngFor=\"let key of gridTwoConfig.tableDataKey\">\n                          {{ item[key] }}\n                        </td>\n                      </tr>\n                    </td>\n                  </tr>\n                </tbody>\n              </ng-container>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      .fields-bar {\n        width: 100vw;\n        position: fixed;\n        top: 0;\n        z-index: 999;\n        background-color: #111249;\n        display: flex;\n      }\n      .grid-label-bar {\n        grid-template-columns: auto auto auto auto auto auto auto;\n        gap: 10px;\n        padding: 5px 14px;\n        display: grid;\n        color: #fff;\n        font-size: 13px;\n      }\n\n      .grid-label-bar .list {\n        display: flex;\n        align-items: center;\n      }\n\n      .lable span {\n        margin-left: 6px;\n      }\n\n      input.picker[type=\"date\"] {\n        position: relative;\n      }\n\n      input.picker[type=\"date\"]::-webkit-calendar-picker-indicator {\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        padding: 0;\n        color: transparent;\n        background: transparent;\n      }\n\n      select,\n      input {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        background: none;\n        border: none;\n        color: #fff;\n        width: 118px;\n        padding: 0 6px;\n      }\n      select::-ms-expand {\n        display: none; /* Hide the default arrow in Internet Explorer 10 and Internet Explorer 11 */\n      }\n      select:focus-visible {\n        outline: none;\n      }\n\n      input::placeholder {\n        color: #fff;\n        opacity: 1; /* Firefox */\n      }\n      option {\n        background-color: #fff;\n        color: #000;\n      }\n      .grid-container {\n        --purple-color: #622248;\n        --card-border-width: 8px;\n      }\n      .grid-container {\n        height: auto !important;\n        display: grid;\n        grid-template-columns: auto auto auto auto auto;\n        grid-template-rows: auto auto auto;\n        gap: 12px;\n        background-color: #dddddd96;\n        padding: 7px;\n        margin-top: 3rem;\n      }\n\n      .card {\n        box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n        margin: 5px 0 12px 0;\n        text-align: center;\n        background-color: #fff;\n        width: 18vw;\n        border-radius: 8px;\n      }\n\n      .card .card-header {\n        padding: 14px;\n        border-bottom: 1px solid #ddd;\n        background: none;\n        font-weight: 600;\n        font-size: 15px;\n      }\n      .card .card-content {\n        padding: 14px;\n      }\n      .card h3 {\n        font-size: 15px;\n        margin: 0;\n      }\n      .card p {\n        font-weight: 600;\n        font-size: 15px;\n        color: #853163;\n      }\n\n      .grid-area-countCards {\n        grid-area: 1/1/2/2;\n      }\n\n      .grid-area-chart {\n        grid-area: 1/2/3/4;\n      }\n\n      .grid-area-chart .card {\n        width: 40vw;\n        height: 40vh;\n        padding-bottom: 8px;\n      }\n\n      .grid-area-tableRecords {\n        grid-area: 1/4/3/-1;\n      }\n\n      .grid-area-tableRecords .card {\n        overflow: auto;\n        width: 38vw;\n        height: 100%;\n      }\n      .grid-area-tableRecords .card-content {\n        padding: 12px 10px;\n      }\n\n      .grid-table {\n        font-weight: 400;\n        font-size: 12px;\n        border-collapse: collapse;\n        width: 100%;\n        height: auto;\n        overflow: auto;\n        border: 1px solid #ddd;\n      }\n\n      .grid-table tr,\n      .grid-table th {\n        border-bottom: 1px solid #ddd;\n      }\n      .grid-table .colspan tr:last-child {\n        border: none;\n      }\n      .grid-table td {\n        padding: 5px 0;\n      }\n      .colspan td {\n        border: none !important;\n        width: 7vw !important;\n      }\n\n      .grid-table td:nth-child(1),\n      .grid-table th:nth-child(1) {\n        border-right: 1px solid #f2f2f2;\n        width: 10vw;\n      }\n\n      .grid-table th {\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: center;\n        width: 7vw;\n      }\n\n      @media (max-width: 850px) {\n        .grid-container {\n          gap: 10px;\n        }\n      }\n\n      @media (max-width: 1089px) {\n        .grid-label-bar .lastList {\n          display: none;\n        }\n      }\n\n      @media (max-width: 786px) {\n        .grid-label-bar {\n          grid-template-columns: auto auto auto;\n        }\n      }\n      @media (max-width: 580px) {\n        .grid-label-bar {\n          grid-template-columns: auto auto;\n        }\n        .card-header {\n          font-size: 14px;\n        }\n        .grid-container {\n          grid-template-columns: auto;\n          grid-template-rows: auto;\n          gap: 0px;\n        }\n        .grid-area-countCards,\n        .grid-area-chart,\n        .grid-area-tableRecords {\n          grid-area: auto;\n        }\n        .grid-area-chart .card,\n        .grid-area-countCards .card,\n        .grid-area-tableRecords .card {\n          width: 100%;\n          height: auto;\n        }\n        .grid-area-countCards .card-content.chart {\n          height: auto;\n        }\n      }\n      .card-border-left {\n        border-left-color: var(--purple-color);\n        border-left-width: var(--card-border-width) !important;\n        border-left-style: solid;\n      }\n      .card-border-bottom {\n        border-bottom-color: var(--purple-color);\n        border-bottom-width: var(--card-border-width) !important;\n        border-bottom-style: solid;\n      }\n      .grid-area-expand {\n        grid-area: 1/2/3/-1;\n      }\n      .grid-area-expand .card {\n        width: 100%;\n        height: 54vh;\n      }\n    `,\n  ],\n})\nexport class NgxSuperDashboardComponent implements OnInit {\n  dynamicForm!: FormGroup;\n  @Input()\n  dynamicFormFieldData!: DynamicFieldsData[];\n\n  @Input() cardConfig!: DynamicCardsData[];\n\n  @Input() chartsConfig!: DashardCardConfig[];\n  @Input() gridOneConfig!: CardTableDataConfig;\n  @Input() gridTwoConfig!: GridTableConfigData;\n\n  @Output() onSelect = new EventEmitter<SelectedFieldValueEmit>();\n  @Output() onSubmit = new EventEmitter<Record<string, string | number>>();\n\n  @Output() onSelectChart = new EventEmitter<ChartEventEmitOnSelect>();\n\n  constructor(private fb: FormBuilder) {\n    console.log(`NgxSuperDashboardComponent : constructor`);\n  }\n\n  ngOnInit() {\n    //create dynamic fields and add validation for each field\n    this.createForm();\n  }\n\n  typeCheck(data: any) {\n    return data && Array.isArray(data) ? false : true;\n  }\n\n  createForm() {\n    let formGrp = {};\n    this.dynamicFormFieldData.forEach((field: DynamicFieldsData) => {\n      formGrp = {\n        ...formGrp,\n        [field.formControlKey]: [\"\", Validators.compose([Validators.required])],\n      };\n    });\n    this.dynamicForm = this.fb.group(formGrp);\n  }\n\n  // emit selected field value\n  seletedValue(ev: any) {\n    this.onSelect.emit({\n      selectedValue: ev.target.value,\n      fieldControlName: ev.target.id,\n    });\n  }\n\n  onSubmitForm() {\n    this.onSubmit.emit(this.dynamicForm.value);\n  }\n\n  selectedChart(ev: ChartSelectionChangedEvent, chartType: string) {\n    this.onSelectChart.emit({\n      ev: ev,\n      chartType: chartType,\n    });\n  }\n}\n\nexport const DynamicFieldsConfiguration = (\n  fieldConfig: DynamicFieldsData[]\n): DynamicFieldsData[] => {\n  if (fieldConfig) return fieldConfig;\n  else return testFieldData;\n};\n\nexport const testFieldData: DynamicFieldsData[] = [\n  { lable: \"Zone\", formControlKey: \"zone\", lovDataList: [] },\n  { lable: \"Branch\", formControlKey: \"branch\", lovDataList: [] },\n  { lable: \"Teams\", formControlKey: \"teams\", lovDataList: [] },\n  { lable: \"Product\", formControlKey: \"product\", lovDataList: [] },\n  { lable: \"Start Date\", formControlKey: \"startDate\", type: \"date\" },\n  { lable: \"End Date\", formControlKey: \"endDate\", type: \"date\" },\n];\n\nexport interface AppLOVData {\n  name: string | number;\n  value: string | number;\n}\n\nexport interface DynamicFieldsData {\n  lable: string;\n  formControlKey: string;\n  lovDataList?: AppLOVData[];\n  type?: string;\n  className?: string;\n}\n\nexport interface SelectedFieldValueEmit {\n  selectedValue: string | number;\n  fieldControlName: string;\n}\n\nexport interface SetDataOption {\n  fetchLovData: Record<string, string | number>[];\n  value: string | number;\n  name: string;\n  name2?: string;\n}\n\n// interfaces for grid cardsList:\nexport const DynamicCardsConfiguration = (\n  cardConfig: DynamicCardsData[]\n): DynamicCardsData[] => {\n  if (cardConfig) return cardConfig;\n  else return testCardData;\n};\n\nexport const testCardData: DynamicCardsData[] = [\n  { title: \"Total Proposals\", value: 700 },\n  { title: \"On Process\", value: 230 },\n  { title: \"Sanctioned\", value: 300 },\n  { title: \"Rejected\", value: 254 },\n  { title: \"Opened prending for > 30 days\", value: 143 },\n  { title: \"Disbursed\", value: 120 },\n];\n\nexport interface DynamicCardsData {\n  title: string;\n  value: number | string;\n  className?: string;\n}\n\nexport const DashboardChartsConfig = (\n  chartsData?: DashardCardConfig[]\n): DashardCardConfig[] => {\n  if (chartsData) {\n    return chartsData;\n  } else {\n    return testChartsData;\n  }\n};\n\nexport const testChartsData: DashardCardConfig[] = [\n  {\n    type: ChartType.ComboChart,\n    cardTitle: \"Monthly Wise\",\n    chartOptionData: {\n      myColumns: [\"Year\", \"Retail\", \"Agri\", \"MSME\", \"Gold\", \"Corp\"],\n\n      chartOptions: {\n        title: `Monthly Wise`,\n        chartArea: { width: \"50%\" },\n        hAxis: {\n          title: `Modules`,\n          minValue: 0,\n        },\n        vAxis: {\n          title: \"No. Of Amount\",\n        },\n        seriesType: \"bars\",\n        // series: { 4: { type: \"line\" } },\n      },\n    },\n    chartData: [\n      [\"2023/05\", 50, 33, 24.5, 33, 22],\n      [\"2024/05\", 23, 41, 22.5, 22, 2],\n      [\"2021/05\", 44, 82, 13, 43, 12],\n      [\"2023/05\", 19, 33, 23, 21, 89],\n      [\"2022/05\", 30, 20, 12, 34, 22],\n    ],\n    className: \"\",\n  },\n  {\n    type: ChartType.PieChart,\n    cardTitle: \"Total Sanctioned\",\n    chartOptionData: {\n      myColumns: [\n        [\"Retail\", \"Agri\", \"MSME\", \"GOLD\", \"CORP\"],\n        \"Leads Count\",\n        { role: \"style\" },\n      ],\n      chartOptions: {\n        title: `Sanctioned Amount`,\n        chartArea: { width: \"50%\" },\n        slices: {\n          0: { color: \"#622248\" },\n          1: { color: \"#109618\" },\n          2: { color: \"#3366cc\" },\n          3: { color: \"red\" },\n          4: { color: \"#ff9900\" },\n        },\n      },\n    },\n    chartData: [\n      [\"Retail\", 3445, \"red\"],\n      [\"Agri\", 3445, \"red\"],\n      [\"MSME\", 3445, \"red\"],\n      [\"Gold\", 3445, \"red\"],\n    ],\n    className: \"\",\n  },\n];\n\nexport interface DashardCardConfig {\n  type: any;\n  chartOptionData: ChartOptionsConfig;\n  chartData: Array<ChartDataType[]>;\n  cardTitle?: string;\n  className?: string;\n}\n\nexport type ChartDataType = string | number;\n\nexport interface ChartOptionsConfig {\n  // myColumns: Array<\n  //   string | ColumnsType[] | string | Record<string, string | number>\n  // >;\n  myColumns: any;\n  chartOptions: ChartAxisData;\n}\n\nexport type ColumnsType = string | number;\n\nexport interface ChartAxisData {\n  title: string;\n  chartArea: { width?: string | number; height?: string | number };\n  slices?: object;\n  hAxis?: AxisVlaues;\n  vAxis?: AxisVlaues;\n  seriesType?: string;\n  series?: object;\n}\n\nexport interface AxisVlaues {\n  title?: string;\n  minValue?: number;\n}\n\nexport interface ChartEventEmitOnSelect {\n  ev: ChartSelectionChangedEvent;\n  chartType: string;\n}\n\nexport const CardTableDataConfig = (\n  cardTableData?: CardTableDataConfig\n): CardTableDataConfig => {\n  if (cardTableData) {\n    return cardTableData;\n  } else {\n    return testCardTable;\n  }\n};\n\nexport const testCardTable = {\n  cardTitle: \"Top 5 Branches\",\n  tableColumnHeadings: [\"\", \"Retail\", \"Agri\", \"MSME\", \"Gold\"],\n  tableDataKey: [\"orgName\", \"retail\", \"agri\", \"msme\", \"gold\"],\n  tableData: [\n    {\n      orgName: \"Chennai\",\n      retail: \"849\",\n      agri: \"599\",\n      msme: \"500\",\n      gold: \"200\",\n    },\n    {\n      orgName: \"Delhi\",\n      retail: \"200\",\n      agri: \"300\",\n      msme: \"400\",\n      gold: \"150\",\n    },\n    {\n      orgName: \"Tnagar\",\n      retail: \"849\",\n      agri: \"480\",\n      msme: \"250\",\n      gold: \"600\",\n    },\n    {\n      orgName: \"Poonamale\",\n      retail: \"940\",\n      agri: \"234\",\n      msme: \"700\",\n      gold: \"400\",\n    },\n  ],\n};\n\nexport interface CardTableDataConfig {\n  cardTitle?: string;\n  tableColumnHeadings: string[];\n  tableDataKey: string[];\n  tableData: Array<Record<string, string | number>>;\n  className?: string;\n}\n\nexport interface GridTableConfigData {\n  title?: string;\n  tableHeading: string[];\n  tableDataKey: string[];\n  // tableData: Array<Record<string, string | number | []>>;\n  tableData: any;\n  className?: string;\n}\n\nexport type ChildDataType = string | number;\n\nexport const GridTableDataConfig = (\n  gridTableData?: GridTableConfigData\n): GridTableConfigData => {\n  if (gridTableData) {\n    return gridTableData;\n  } else {\n    return testGridTable;\n  }\n};\n\nexport const testGridTable: GridTableConfigData = {\n  title: \"Scheme Wise\",\n  tableHeading: [\n    \"Loan Type\",\n    \"Scheme\",\n    \"No of Acc #\",\n    \"Limit in (Lakhs)\",\n    \"OS amt in(Lakhs)\",\n  ],\n  tableData: [\n    {\n      parentName: \"Chennai\",\n      childData: [\n        {\n          tpmSeqId: 62685,\n          tpmCode: \"2\",\n          tpmModifiedDate: \"2024-04-24T07:49:20.879+0000\",\n          tpmPrdCode: \"Car Loan\",\n          schemeType: \"Car Dealer\",\n          noOfAcc: \"S14\",\n          limit: \"344\",\n          Sanctioned: \"20302\",\n        },\n        {\n          tpmSeqId: 62698,\n          tpmCode: \"2\",\n          tpmModifiedDate: \"2024-04-24T07:49:20.889+0000\",\n          tpmPrdCode: \"Car Loan\",\n          schemeType: \"Luxury Car Loan\",\n          noOfAcc: \"84\",\n          limit: \"21232\",\n          Sanctioned: \"121.45\",\n        },\n      ],\n    },\n    {\n      parentName: \"Hyderabad\",\n      childData: [\n        {\n          tpmSeqId: 62686,\n          tpmCode: \"2\",\n          tpmModifiedDate: \"2024-04-24T07:49:20.880+0000\",\n          tpmPrdCode: \"Cash Loan\",\n          schemeType: \"Property Loan\",\n          noOfAcc: \"S34\",\n          limit: \"676\",\n          Sanctioned: \"23\",\n        },\n      ],\n    },\n  ],\n  tableDataKey: [\"schemeType\", \"noOfAcc\", \"limit\", \"Sanctioned\"],\n};\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\nimport { NgxSuperDashboardComponent } from \"./ngx-super-dashboard.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { GoogleChartsModule, ScriptLoaderService } from \"angular-google-charts\";\n\n@NgModule({\n  declarations: [NgxSuperDashboardComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, GoogleChartsModule],\n  providers: [ScriptLoaderService],\n  exports: [NgxSuperDashboardComponent],\n})\nexport class NgxSuperDashboardModule {}\n"],"names":[],"mappings":"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"}