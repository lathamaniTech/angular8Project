!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("angular-google-charts"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-super-dashboard",["exports","@angular/core","@angular/forms","angular-google-charts","@angular/common"],e):e((n=n||self)["ngx-super-dashboard"]={},n.ng.core,n.ng.forms,n.angularGoogleCharts,n.ng.common)}(this,(function(n,e,t,a,r){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var o=function(){return(o=Object.assign||function(n){for(var e,t=1,a=arguments.length;t<a;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};Object.create;Object.create;var i=function(){function n(){}return n.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],n.ctorParameters=function(){return[]},n.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new n},token:n,providedIn:"root"}),n}(),d=function(){function n(n){this.fb=n,this.onSelect=new e.EventEmitter,this.onSubmit=new e.EventEmitter,this.onSelectChart=new e.EventEmitter,console.log("NgxSuperDashboardComponent : constructor")}return n.prototype.ngOnInit=function(){this.createForm()},n.prototype.typeCheck=function(n){return!n||!Array.isArray(n)},n.prototype.createForm=function(){var n={};this.dynamicFormFieldData.forEach((function(e){var a;n=o({},n,((a={})[e.formControlKey]=["",t.Validators.compose([t.Validators.required])],a))})),this.dynamicForm=this.fb.group(n)},n.prototype.seletedValue=function(n){this.onSelect.emit({selectedValue:n.target.value,fieldControlName:n.target.id})},n.prototype.onSubmitForm=function(){this.onSubmit.emit(this.dynamicForm.value)},n.prototype.selectedChart=function(n,e){this.onSelectChart.emit({ev:n,chartType:e})},n.decorators=[{type:e.Component,args:[{selector:"lib-ngx-super-dashboard",template:'\n    <div class="fields-bar">\n      <form [formGroup]="dynamicForm" (ngSubmit)="onSubmitForm()">\n        <div class="grid-label-bar" *ngIf="dynamicForm.value.length != 0">\n          <ng-container\n            *ngFor="let field of dynamicFormFieldData; let i = index"\n          >\n            <div\n              [ngClass]="field.className ? field.className + \' list\' : \'list\'"\n              *ngIf="\n                field.lovDataList && field.lovDataList.length > 0;\n                else dynamicNonDropdown\n              "\n            >\n              <div class="lable">{{ field.lable }}<span>-</span></div>\n\n              <select\n                formControlName="{{ field.formControlKey }}"\n                id="{{ field.formControlKey }}"\n                (change)="seletedValue($event)"\n                placeholder="Select"\n              >\n                <option selected value="">Select</option>\n                <option\n                  [value]="item.value"\n                  *ngFor="let item of field.lovDataList"\n                >\n                  {{ item.name }}\n                </option>\n              </select>\n            </div>\n\n            <ng-template #dynamicNonDropdown>\n              <div\n                [ngClass]="field.className ? field.className + \' list\' : \'list\'"\n              >\n                <div class="lable">{{ field.lable }}<span>-</span></div>\n                <input\n                  type="{{ field.type }}"\n                  class="picker"\n                  formControlName="{{ field.formControlKey }}"\n                  id="{{ field.formControlKey }}"\n                  (change)="seletedValue($event)"\n                  placeholder="Select"\n                />\n              </div>\n            </ng-template>\n          </ng-container>\n\n          <div class="list lastList">\n            <div class="lable">\n              *Accounts in Actuals <br />\n              *Ammount in Lakhs\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div class="grid-container">\n      <div\n        class="grid-area-countCards"\n        *ngIf="cardConfig && cardConfig.length > 0"\n      >\n        <ng-container *ngFor="let item of cardConfig; let j = index">\n          <div\n            [ngClass]="\n              item.className\n                ? item.className + \' card card-border-left\'\n                : \'card card-border-left\'\n            "\n          >\n            <div class="card-header">\n              <h3>{{ item.title }}</h3>\n            </div>\n            <div class="card-content">\n              <p>{{ item.value }}</p>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n\n      <div\n        [ngClass]="\n          gridTwoConfig && gridTwoConfig !== null && gridTwoConfig !== undefined\n            ? \'grid-area-chart\'\n            : \'grid-area-chart grid-area-expand\'\n        "\n      >\n        <ng-container *ngFor="let chart of chartsConfig">\n          <div\n            [ngClass]="\n              chart.className\n                ? chart.className + \' card card-border-bottom\'\n                : \'card card-border-bottom\'\n            "\n          >\n            <div class="card-header">\n              <h3>{{ chart.cardTitle }}</h3>\n            </div>\n            <google-chart\n              style="width: 100%; height: 100%"\n              [type]="chart.type"\n              [data]="chart.chartData"\n              [columns]="chart.chartOptionData.myColumns"\n              [options]="chart.chartOptionData.chartOptions"\n              (select)="selectedChart($event, chart.type)"\n            ></google-chart>\n          </div>\n        </ng-container>\n\n        <ng-container\n          *ngIf="\n            gridOneConfig && gridOneConfig != null && gridOneConfig != undefined\n          "\n        >\n          <div\n            [ngClass]="\n              gridOneConfig.className\n                ? gridOneConfig.className + \'card card-border-bottom\'\n                : \'card card-border-bottom\'\n            "\n          >\n            <div class="card-header">\n              <h3>{{ gridOneConfig.cardTitle }}</h3>\n            </div>\n            <div class="card-content">\n              <table class="grid-table">\n                <thead>\n                  <th *ngFor="let head of gridOneConfig.tableColumnHeadings">\n                    {{ head }}\n                  </th>\n                </thead>\n                <tbody>\n                  <ng-container *ngIf="gridOneConfig.tableData; else noData">\n                    <tr\n                      *ngFor="\n                        let item of gridOneConfig.tableData;\n                        let i = index\n                      "\n                    >\n                      <td *ngFor="let val of gridOneConfig.tableDataKey">\n                        {{ item[val] }}\n                      </td>\n                    </tr>\n                  </ng-container>\n                  <ng-template #noData>\n                    <tr>\n                      <td colspan="5">No Data</td>\n                    </tr>\n                  </ng-template>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div\n        class="grid-area-tableRecords"\n        *ngIf="\n          gridTwoConfig && gridTwoConfig !== null && gridTwoConfig !== undefined\n        "\n      >\n        <div\n          [ngClass]="\n            gridTwoConfig.className\n              ? gridTwoConfig.className + \' card card-border-top\'\n              : \'card card-border-top\'\n          "\n        >\n          <div class="card-header">\n            <h3>{{ gridTwoConfig.title }}</h3>\n          </div>\n          <div class="card-content">\n            <table class="grid-table">\n              <thead>\n                <th *ngFor="let head of gridTwoConfig.tableHeading">\n                  {{ head }}\n                </th>\n              </thead>\n              <ng-container\n                *ngIf="\n                  gridTwoConfig.tableData && gridTwoConfig.tableData.length > 0\n                "\n              >\n                <tbody>\n                  <tr *ngFor="let parent of gridTwoConfig.tableData">\n                    <td>\n                      {{ parent.parentName }}\n                    </td>\n                    <td\n                      [attr.colspan]="gridTwoConfig.tableDataKey.length"\n                      class="colspan"\n                    >\n                      <tr *ngFor="let item of parent.childData">\n                        <td *ngFor="let key of gridTwoConfig.tableDataKey">\n                          {{ item[key] }}\n                        </td>\n                      </tr>\n                    </td>\n                  </tr>\n                </tbody>\n              </ng-container>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  ',changeDetection:e.ChangeDetectionStrategy.OnPush,styles:['\n      .fields-bar {\n        width: 100vw;\n        position: fixed;\n        top: 0;\n        z-index: 999;\n        background-color: #111249;\n        display: flex;\n      }\n      .grid-label-bar {\n        grid-template-columns: auto auto auto auto auto auto auto;\n        gap: 10px;\n        padding: 5px 14px;\n        display: grid;\n        color: #fff;\n        font-size: 13px;\n      }\n\n      .grid-label-bar .list {\n        display: flex;\n        align-items: center;\n      }\n\n      .lable span {\n        margin-left: 6px;\n      }\n\n      input.picker[type="date"] {\n        position: relative;\n      }\n\n      input.picker[type="date"]::-webkit-calendar-picker-indicator {\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        padding: 0;\n        color: transparent;\n        background: transparent;\n      }\n\n      select,\n      input {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        background: none;\n        border: none;\n        color: #fff;\n        width: 118px;\n        padding: 0 6px;\n      }\n      select::-ms-expand {\n        display: none; /* Hide the default arrow in Internet Explorer 10 and Internet Explorer 11 */\n      }\n      select:focus-visible {\n        outline: none;\n      }\n\n      input::placeholder {\n        color: #fff;\n        opacity: 1; /* Firefox */\n      }\n      option {\n        background-color: #fff;\n        color: #000;\n      }\n      .grid-container {\n        --purple-color: #622248;\n        --card-border-width: 8px;\n      }\n      .grid-container {\n        height: auto !important;\n        display: grid;\n        grid-template-columns: auto auto auto auto auto;\n        grid-template-rows: auto auto auto;\n        gap: 12px;\n        background-color: #dddddd96;\n        padding: 7px;\n        margin-top: 3rem;\n      }\n\n      .card {\n        box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n        margin: 5px 0 12px 0;\n        text-align: center;\n        background-color: #fff;\n        width: 18vw;\n        border-radius: 8px;\n      }\n\n      .card .card-header {\n        padding: 14px;\n        border-bottom: 1px solid #ddd;\n        background: none;\n        font-weight: 600;\n        font-size: 15px;\n      }\n      .card .card-content {\n        padding: 14px;\n      }\n      .card h3 {\n        font-size: 15px;\n        margin: 0;\n      }\n      .card p {\n        font-weight: 600;\n        font-size: 15px;\n        color: #853163;\n      }\n\n      .grid-area-countCards {\n        grid-area: 1/1/2/2;\n      }\n\n      .grid-area-chart {\n        grid-area: 1/2/3/4;\n      }\n\n      .grid-area-chart .card {\n        width: 40vw;\n        height: 40vh;\n        padding-bottom: 8px;\n      }\n\n      .grid-area-tableRecords {\n        grid-area: 1/4/3/-1;\n      }\n\n      .grid-area-tableRecords .card {\n        overflow: auto;\n        width: 38vw;\n        height: 100%;\n      }\n      .grid-area-tableRecords .card-content {\n        padding: 12px 10px;\n      }\n\n      .grid-table {\n        font-weight: 400;\n        font-size: 12px;\n        border-collapse: collapse;\n        width: 100%;\n        height: auto;\n        overflow: auto;\n        border: 1px solid #ddd;\n      }\n\n      .grid-table tr,\n      .grid-table th {\n        border-bottom: 1px solid #ddd;\n      }\n      .grid-table .colspan tr:last-child {\n        border: none;\n      }\n      .grid-table td {\n        padding: 5px 0;\n      }\n      .colspan td {\n        border: none !important;\n        width: 7vw !important;\n      }\n\n      .grid-table td:nth-child(1),\n      .grid-table th:nth-child(1) {\n        border-right: 1px solid #f2f2f2;\n        width: 10vw;\n      }\n\n      .grid-table th {\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: center;\n        width: 7vw;\n      }\n\n      @media (max-width: 850px) {\n        .grid-container {\n          gap: 10px;\n        }\n      }\n\n      @media (max-width: 1089px) {\n        .grid-label-bar .lastList {\n          display: none;\n        }\n      }\n\n      @media (max-width: 786px) {\n        .grid-label-bar {\n          grid-template-columns: auto auto auto;\n        }\n      }\n      @media (max-width: 580px) {\n        .grid-label-bar {\n          grid-template-columns: auto auto;\n        }\n        .card-header {\n          font-size: 14px;\n        }\n        .grid-container {\n          grid-template-columns: auto;\n          grid-template-rows: auto;\n          gap: 0px;\n        }\n        .grid-area-countCards,\n        .grid-area-chart,\n        .grid-area-tableRecords {\n          grid-area: auto;\n        }\n        .grid-area-chart .card,\n        .grid-area-countCards .card,\n        .grid-area-tableRecords .card {\n          width: 100%;\n          height: auto;\n        }\n        .grid-area-countCards .card-content.chart {\n          height: auto;\n        }\n      }\n      .card-border-left {\n        border-left-color: var(--purple-color);\n        border-left-width: var(--card-border-width) !important;\n        border-left-style: solid;\n      }\n      .card-border-bottom {\n        border-bottom-color: var(--purple-color);\n        border-bottom-width: var(--card-border-width) !important;\n        border-bottom-style: solid;\n      }\n      .grid-area-expand {\n        grid-area: 1/2/3/-1;\n      }\n      .grid-area-expand .card {\n        width: 100%;\n        height: 54vh;\n      }\n    ']}]}],n.ctorParameters=function(){return[{type:t.FormBuilder}]},n.propDecorators={dynamicFormFieldData:[{type:e.Input}],cardConfig:[{type:e.Input}],chartsConfig:[{type:e.Input}],gridOneConfig:[{type:e.Input}],gridTwoConfig:[{type:e.Input}],onSelect:[{type:e.Output}],onSubmit:[{type:e.Output}],onSelectChart:[{type:e.Output}]},n}();var l=[{lable:"Zone",formControlKey:"zone",lovDataList:[]},{lable:"Branch",formControlKey:"branch",lovDataList:[]},{lable:"Teams",formControlKey:"teams",lovDataList:[]},{lable:"Product",formControlKey:"product",lovDataList:[]},{lable:"Start Date",formControlKey:"startDate",type:"date"},{lable:"End Date",formControlKey:"endDate",type:"date"}];var c=[{title:"Total Proposals",value:700},{title:"On Process",value:230},{title:"Sanctioned",value:300},{title:"Rejected",value:254},{title:"Opened prending for > 30 days",value:143},{title:"Disbursed",value:120}];var s=[{type:a.ChartType.ComboChart,cardTitle:"Monthly Wise",chartOptionData:{myColumns:["Year","Retail","Agri","MSME","Gold","Corp"],chartOptions:{title:"Monthly Wise",chartArea:{width:"50%"},hAxis:{title:"Modules",minValue:0},vAxis:{title:"No. Of Amount"},seriesType:"bars"}},chartData:[["2023/05",50,33,24.5,33,22],["2024/05",23,41,22.5,22,2],["2021/05",44,82,13,43,12],["2023/05",19,33,23,21,89],["2022/05",30,20,12,34,22]],className:""},{type:a.ChartType.PieChart,cardTitle:"Total Sanctioned",chartOptionData:{myColumns:[["Retail","Agri","MSME","GOLD","CORP"],"Leads Count",{role:"style"}],chartOptions:{title:"Sanctioned Amount",chartArea:{width:"50%"},slices:{0:{color:"#622248"},1:{color:"#109618"},2:{color:"#3366cc"},3:{color:"red"},4:{color:"#ff9900"}}}},chartData:[["Retail",3445,"red"],["Agri",3445,"red"],["MSME",3445,"red"],["Gold",3445,"red"]],className:""}];var g={cardTitle:"Top 5 Branches",tableColumnHeadings:["","Retail","Agri","MSME","Gold"],tableDataKey:["orgName","retail","agri","msme","gold"],tableData:[{orgName:"Chennai",retail:"849",agri:"599",msme:"500",gold:"200"},{orgName:"Delhi",retail:"200",agri:"300",msme:"400",gold:"150"},{orgName:"Tnagar",retail:"849",agri:"480",msme:"250",gold:"600"},{orgName:"Poonamale",retail:"940",agri:"234",msme:"700",gold:"400"}]};var p={title:"Scheme Wise",tableHeading:["Loan Type","Scheme","No of Acc #","Limit in (Lakhs)","OS amt in(Lakhs)"],tableData:[{parentName:"Chennai",childData:[{tpmSeqId:62685,tpmCode:"2",tpmModifiedDate:"2024-04-24T07:49:20.879+0000",tpmPrdCode:"Car Loan",schemeType:"Car Dealer",noOfAcc:"S14",limit:"344",Sanctioned:"20302"},{tpmSeqId:62698,tpmCode:"2",tpmModifiedDate:"2024-04-24T07:49:20.889+0000",tpmPrdCode:"Car Loan",schemeType:"Luxury Car Loan",noOfAcc:"84",limit:"21232",Sanctioned:"121.45"}]},{parentName:"Hyderabad",childData:[{tpmSeqId:62686,tpmCode:"2",tpmModifiedDate:"2024-04-24T07:49:20.880+0000",tpmPrdCode:"Cash Loan",schemeType:"Property Loan",noOfAcc:"S34",limit:"676",Sanctioned:"23"}]}],tableDataKey:["schemeType","noOfAcc","limit","Sanctioned"]},m=function(){function n(){}return n.decorators=[{type:e.NgModule,args:[{declarations:[d],imports:[r.CommonModule,t.FormsModule,t.ReactiveFormsModule,a.GoogleChartsModule],providers:[a.ScriptLoaderService],exports:[d]}]}],n}();n.CardTableDataConfig=function(n){return n||g},n.DashboardChartsConfig=function(n){return n||s},n.DynamicCardsConfiguration=function(n){return n||c},n.DynamicFieldsConfiguration=function(n){return n||l},n.GridTableDataConfig=function(n){return n||p},n.NgxSuperDashboardComponent=d,n.NgxSuperDashboardModule=m,n.NgxSuperDashboardService=i,n.testCardData=c,n.testCardTable=g,n.testChartsData=s,n.testFieldData=l,n.testGridTable=p,Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-super-dashboard.umd.min.js.map