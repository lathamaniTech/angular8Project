{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-super-dashboard/lib/ngx-super-dashboard.service.ts","ng://ngx-super-dashboard/lib/ngx-super-dashboard.component.ts","ng://ngx-super-dashboard/lib/ngx-super-dashboard.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","create","NgxSuperDashboardService","Injectable","args","providedIn","NgxSuperDashboardComponent","fb","onSelect","EventEmitter","onSubmit","onSelectChart","console","log","ngOnInit","createForm","typeCheck","data","Array","isArray","formGrp","dynamicFormFieldData","forEach","field","_a","formControlKey","Validators","compose","required","dynamicForm","group","seletedValue","ev","emit","selectedValue","target","value","fieldControlName","id","onSubmitForm","selectedChart","chartType","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","FormBuilder","Input","Output","testFieldData","lable","lovDataList","type","testCardData","title","testChartsData","ChartType","ComboChart","cardTitle","chartOptionData","myColumns","chartOptions","chartArea","width","hAxis","minValue","vAxis","seriesType","chartData","className","PieChart","role","slices","0","color","1","2","3","4","testCardTable","tableColumnHeadings","tableDataKey","tableData","orgName","retail","agri","msme","gold","testGridTable","tableHeading","parentName","childData","tpmSeqId","tpmCode","tpmModifiedDate","tpmPrdCode","schemeType","noOfAcc","limit","Sanctioned","NgxSuperDashboardModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","GoogleChartsModule","providers","ScriptLoaderService","exports","cardTableData","chartsData","cardConfig","fieldConfig","gridTableData"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSuperDashboardService {\n\n  constructor() { }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ChartSelectionChangedEvent, ChartType } from \"angular-google-charts\";\n\n@Component({\n  selector: \"lib-ngx-super-dashboard\",\n  template: `\n    <div class=\"fields-bar\">\n      <form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmitForm()\">\n        <div class=\"grid-label-bar\" *ngIf=\"dynamicForm.value.length != 0\">\n          <ng-container\n            *ngFor=\"let field of dynamicFormFieldData; let i = index\"\n          >\n            <div\n              [ngClass]=\"field.className ? field.className + ' list' : 'list'\"\n              *ngIf=\"\n                field.lovDataList && field.lovDataList.length > 0;\n                else dynamicNonDropdown\n              \"\n            >\n              <div class=\"lable\">{{ field.lable }}<span>-</span></div>\n\n              <select\n                formControlName=\"{{ field.formControlKey }}\"\n                id=\"{{ field.formControlKey }}\"\n                (change)=\"seletedValue($event)\"\n                placeholder=\"Select\"\n              >\n                <option selected value=\"\">Select</option>\n                <option\n                  [value]=\"item.value\"\n                  *ngFor=\"let item of field.lovDataList\"\n                >\n                  {{ item.name }}\n                </option>\n              </select>\n            </div>\n\n            <ng-template #dynamicNonDropdown>\n              <div\n                [ngClass]=\"field.className ? field.className + ' list' : 'list'\"\n              >\n                <div class=\"lable\">{{ field.lable }}<span>-</span></div>\n                <input\n                  type=\"{{ field.type }}\"\n                  class=\"picker\"\n                  formControlName=\"{{ field.formControlKey }}\"\n                  id=\"{{ field.formControlKey }}\"\n                  (change)=\"seletedValue($event)\"\n                  placeholder=\"Select\"\n                />\n              </div>\n            </ng-template>\n          </ng-container>\n\n          <div class=\"list lastList\">\n            <div class=\"lable\">\n              *Accounts in Actuals <br />\n              *Ammount in Lakhs\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div class=\"grid-container\">\n      <div\n        class=\"grid-area-countCards\"\n        *ngIf=\"cardConfig && cardConfig.length > 0\"\n      >\n        <ng-container *ngFor=\"let item of cardConfig; let j = index\">\n          <div\n            [ngClass]=\"\n              item.className\n                ? item.className + ' card card-border-left'\n                : 'card card-border-left'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ item.title }}</h3>\n            </div>\n            <div class=\"card-content\">\n              <p>{{ item.value }}</p>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n\n      <div\n        [ngClass]=\"\n          gridTwoConfig && gridTwoConfig !== null && gridTwoConfig !== undefined\n            ? 'grid-area-chart'\n            : 'grid-area-chart grid-area-expand'\n        \"\n      >\n        <ng-container *ngFor=\"let chart of chartsConfig\">\n          <div\n            [ngClass]=\"\n              chart.className\n                ? chart.className + ' card card-border-bottom'\n                : 'card card-border-bottom'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ chart.cardTitle }}</h3>\n            </div>\n            <google-chart\n              style=\"width: 100%; height: 100%\"\n              [type]=\"chart.type\"\n              [data]=\"chart.chartData\"\n              [columns]=\"chart.chartOptionData.myColumns\"\n              [options]=\"chart.chartOptionData.chartOptions\"\n              (select)=\"selectedChart($event, chart.type)\"\n            ></google-chart>\n          </div>\n        </ng-container>\n\n        <ng-container\n          *ngIf=\"\n            gridOneConfig && gridOneConfig != null && gridOneConfig != undefined\n          \"\n        >\n          <div\n            [ngClass]=\"\n              gridOneConfig.className\n                ? gridOneConfig.className + 'card card-border-bottom'\n                : 'card card-border-bottom'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ gridOneConfig.cardTitle }}</h3>\n            </div>\n            <div class=\"card-content\">\n              <table class=\"grid-table\">\n                <thead>\n                  <th *ngFor=\"let head of gridOneConfig.tableColumnHeadings\">\n                    {{ head }}\n                  </th>\n                </thead>\n                <tbody>\n                  <ng-container *ngIf=\"gridOneConfig.tableData; else noData\">\n                    <tr\n                      *ngFor=\"\n                        let item of gridOneConfig.tableData;\n                        let i = index\n                      \"\n                    >\n                      <td *ngFor=\"let val of gridOneConfig.tableDataKey\">\n                        {{ item[val] }}\n                      </td>\n                    </tr>\n                  </ng-container>\n                  <ng-template #noData>\n                    <tr>\n                      <td colspan=\"5\">No Data</td>\n                    </tr>\n                  </ng-template>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div\n        class=\"grid-area-tableRecords\"\n        *ngIf=\"\n          gridTwoConfig && gridTwoConfig !== null && gridTwoConfig !== undefined\n        \"\n      >\n        <div\n          [ngClass]=\"\n            gridTwoConfig.className\n              ? gridTwoConfig.className + ' card card-border-top'\n              : 'card card-border-top'\n          \"\n        >\n          <div class=\"card-header\">\n            <h3>{{ gridTwoConfig.title }}</h3>\n          </div>\n          <div class=\"card-content\">\n            <table class=\"grid-table\">\n              <thead>\n                <th *ngFor=\"let head of gridTwoConfig.tableHeading\">\n                  {{ head }}\n                </th>\n              </thead>\n              <ng-container\n                *ngIf=\"\n                  gridTwoConfig.tableData && gridTwoConfig.tableData.length > 0\n                \"\n              >\n                <tbody>\n                  <tr *ngFor=\"let parent of gridTwoConfig.tableData\">\n                    <td>\n                      {{ parent.parentName }}\n                    </td>\n                    <td\n                      [attr.colspan]=\"gridTwoConfig.tableDataKey.length\"\n                      class=\"colspan\"\n                    >\n                      <tr *ngFor=\"let item of parent.childData\">\n                        <td *ngFor=\"let key of gridTwoConfig.tableDataKey\">\n                          {{ item[key] }}\n                        </td>\n                      </tr>\n                    </td>\n                  </tr>\n                </tbody>\n              </ng-container>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      .fields-bar {\n        width: 100vw;\n        position: fixed;\n        top: 0;\n        z-index: 999;\n        background-color: #111249;\n        display: flex;\n      }\n      .grid-label-bar {\n        grid-template-columns: auto auto auto auto auto auto auto;\n        gap: 10px;\n        padding: 5px 14px;\n        display: grid;\n        color: #fff;\n        font-size: 13px;\n      }\n\n      .grid-label-bar .list {\n        display: flex;\n        align-items: center;\n      }\n\n      .lable span {\n        margin-left: 6px;\n      }\n\n      input.picker[type=\"date\"] {\n        position: relative;\n      }\n\n      input.picker[type=\"date\"]::-webkit-calendar-picker-indicator {\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        padding: 0;\n        color: transparent;\n        background: transparent;\n      }\n\n      select,\n      input {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        background: none;\n        border: none;\n        color: #fff;\n        width: 118px;\n        padding: 0 6px;\n      }\n      select::-ms-expand {\n        display: none; /* Hide the default arrow in Internet Explorer 10 and Internet Explorer 11 */\n      }\n      select:focus-visible {\n        outline: none;\n      }\n\n      input::placeholder {\n        color: #fff;\n        opacity: 1; /* Firefox */\n      }\n      option {\n        background-color: #fff;\n        color: #000;\n      }\n      .grid-container {\n        --purple-color: #622248;\n        --card-border-width: 8px;\n      }\n      .grid-container {\n        height: auto !important;\n        display: grid;\n        grid-template-columns: auto auto auto auto auto;\n        grid-template-rows: auto auto auto;\n        gap: 12px;\n        background-color: #dddddd96;\n        padding: 7px;\n        margin-top: 3rem;\n      }\n\n      .card {\n        box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n        margin: 5px 0 12px 0;\n        text-align: center;\n        background-color: #fff;\n        width: 18vw;\n        border-radius: 8px;\n      }\n\n      .card .card-header {\n        padding: 14px;\n        border-bottom: 1px solid #ddd;\n        background: none;\n        font-weight: 600;\n        font-size: 15px;\n      }\n      .card .card-content {\n        padding: 14px;\n      }\n      .card h3 {\n        font-size: 15px;\n        margin: 0;\n      }\n      .card p {\n        font-weight: 600;\n        font-size: 15px;\n        color: #853163;\n      }\n\n      .grid-area-countCards {\n        grid-area: 1/1/2/2;\n      }\n\n      .grid-area-chart {\n        grid-area: 1/2/3/4;\n      }\n\n      .grid-area-chart .card {\n        width: 40vw;\n        height: 40vh;\n        padding-bottom: 8px;\n      }\n\n      .grid-area-tableRecords {\n        grid-area: 1/4/3/-1;\n      }\n\n      .grid-area-tableRecords .card {\n        overflow: auto;\n        width: 38vw;\n        height: 100%;\n      }\n      .grid-area-tableRecords .card-content {\n        padding: 12px 10px;\n      }\n\n      .grid-table {\n        font-weight: 400;\n        font-size: 12px;\n        border-collapse: collapse;\n        width: 100%;\n        height: auto;\n        overflow: auto;\n        border: 1px solid #ddd;\n      }\n\n      .grid-table tr,\n      .grid-table th {\n        border-bottom: 1px solid #ddd;\n      }\n      .grid-table .colspan tr:last-child {\n        border: none;\n      }\n      .grid-table td {\n        padding: 5px 0;\n      }\n      .colspan td {\n        border: none !important;\n        width: 7vw !important;\n      }\n\n      .grid-table td:nth-child(1),\n      .grid-table th:nth-child(1) {\n        border-right: 1px solid #f2f2f2;\n        width: 10vw;\n      }\n\n      .grid-table th {\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: center;\n        width: 7vw;\n      }\n\n      @media (max-width: 850px) {\n        .grid-container {\n          gap: 10px;\n        }\n      }\n\n      @media (max-width: 1089px) {\n        .grid-label-bar .lastList {\n          display: none;\n        }\n      }\n\n      @media (max-width: 786px) {\n        .grid-label-bar {\n          grid-template-columns: auto auto auto;\n        }\n      }\n      @media (max-width: 580px) {\n        .grid-label-bar {\n          grid-template-columns: auto auto;\n        }\n        .card-header {\n          font-size: 14px;\n        }\n        .grid-container {\n          grid-template-columns: auto;\n          grid-template-rows: auto;\n          gap: 0px;\n        }\n        .grid-area-countCards,\n        .grid-area-chart,\n        .grid-area-tableRecords {\n          grid-area: auto;\n        }\n        .grid-area-chart .card,\n        .grid-area-countCards .card,\n        .grid-area-tableRecords .card {\n          width: 100%;\n          height: auto;\n        }\n        .grid-area-countCards .card-content.chart {\n          height: auto;\n        }\n      }\n      .card-border-left {\n        border-left-color: var(--purple-color);\n        border-left-width: var(--card-border-width) !important;\n        border-left-style: solid;\n      }\n      .card-border-bottom {\n        border-bottom-color: var(--purple-color);\n        border-bottom-width: var(--card-border-width) !important;\n        border-bottom-style: solid;\n      }\n      .grid-area-expand {\n        grid-area: 1/2/3/-1;\n      }\n      .grid-area-expand .card {\n        width: 100%;\n        height: 54vh;\n      }\n    `,\n  ],\n})\nexport class NgxSuperDashboardComponent implements OnInit {\n  dynamicForm!: FormGroup;\n  @Input()\n  dynamicFormFieldData!: DynamicFieldsData[];\n\n  @Input() cardConfig!: DynamicCardsData[];\n\n  @Input() chartsConfig!: DashardCardConfig[];\n  @Input() gridOneConfig!: CardTableDataConfig;\n  @Input() gridTwoConfig!: GridTableConfigData;\n\n  @Output() onSelect = new EventEmitter<SelectedFieldValueEmit>();\n  @Output() onSubmit = new EventEmitter<Record<string, string | number>>();\n\n  @Output() onSelectChart = new EventEmitter<ChartEventEmitOnSelect>();\n\n  constructor(private fb: FormBuilder) {\n    console.log(`NgxSuperDashboardComponent : constructor`);\n  }\n\n  ngOnInit() {\n    //create dynamic fields and add validation for each field\n    this.createForm();\n  }\n\n  typeCheck(data: any) {\n    return data && Array.isArray(data) ? false : true;\n  }\n\n  createForm() {\n    let formGrp = {};\n    this.dynamicFormFieldData.forEach((field: DynamicFieldsData) => {\n      formGrp = {\n        ...formGrp,\n        [field.formControlKey]: [\"\", Validators.compose([Validators.required])],\n      };\n    });\n    this.dynamicForm = this.fb.group(formGrp);\n  }\n\n  // emit selected field value\n  seletedValue(ev: any) {\n    this.onSelect.emit({\n      selectedValue: ev.target.value,\n      fieldControlName: ev.target.id,\n    });\n  }\n\n  onSubmitForm() {\n    this.onSubmit.emit(this.dynamicForm.value);\n  }\n\n  selectedChart(ev: ChartSelectionChangedEvent, chartType: string) {\n    this.onSelectChart.emit({\n      ev: ev,\n      chartType: chartType,\n    });\n  }\n}\n\nexport const DynamicFieldsConfiguration = (\n  fieldConfig: DynamicFieldsData[]\n): DynamicFieldsData[] => {\n  if (fieldConfig) return fieldConfig;\n  else return testFieldData;\n};\n\nexport const testFieldData: DynamicFieldsData[] = [\n  { lable: \"Zone\", formControlKey: \"zone\", lovDataList: [] },\n  { lable: \"Branch\", formControlKey: \"branch\", lovDataList: [] },\n  { lable: \"Teams\", formControlKey: \"teams\", lovDataList: [] },\n  { lable: \"Product\", formControlKey: \"product\", lovDataList: [] },\n  { lable: \"Start Date\", formControlKey: \"startDate\", type: \"date\" },\n  { lable: \"End Date\", formControlKey: \"endDate\", type: \"date\" },\n];\n\nexport interface AppLOVData {\n  name: string | number;\n  value: string | number;\n}\n\nexport interface DynamicFieldsData {\n  lable: string;\n  formControlKey: string;\n  lovDataList?: AppLOVData[];\n  type?: string;\n  className?: string;\n}\n\nexport interface SelectedFieldValueEmit {\n  selectedValue: string | number;\n  fieldControlName: string;\n}\n\nexport interface SetDataOption {\n  fetchLovData: Record<string, string | number>[];\n  value: string | number;\n  name: string;\n  name2?: string;\n}\n\n// interfaces for grid cardsList:\nexport const DynamicCardsConfiguration = (\n  cardConfig: DynamicCardsData[]\n): DynamicCardsData[] => {\n  if (cardConfig) return cardConfig;\n  else return testCardData;\n};\n\nexport const testCardData: DynamicCardsData[] = [\n  { title: \"Total Proposals\", value: 700 },\n  { title: \"On Process\", value: 230 },\n  { title: \"Sanctioned\", value: 300 },\n  { title: \"Rejected\", value: 254 },\n  { title: \"Opened prending for > 30 days\", value: 143 },\n  { title: \"Disbursed\", value: 120 },\n];\n\nexport interface DynamicCardsData {\n  title: string;\n  value: number | string;\n  className?: string;\n}\n\nexport const DashboardChartsConfig = (\n  chartsData?: DashardCardConfig[]\n): DashardCardConfig[] => {\n  if (chartsData) {\n    return chartsData;\n  } else {\n    return testChartsData;\n  }\n};\n\nexport const testChartsData: DashardCardConfig[] = [\n  {\n    type: ChartType.ComboChart,\n    cardTitle: \"Monthly Wise\",\n    chartOptionData: {\n      myColumns: [\"Year\", \"Retail\", \"Agri\", \"MSME\", \"Gold\", \"Corp\"],\n\n      chartOptions: {\n        title: `Monthly Wise`,\n        chartArea: { width: \"50%\" },\n        hAxis: {\n          title: `Modules`,\n          minValue: 0,\n        },\n        vAxis: {\n          title: \"No. Of Amount\",\n        },\n        seriesType: \"bars\",\n        // series: { 4: { type: \"line\" } },\n      },\n    },\n    chartData: [\n      [\"2023/05\", 50, 33, 24.5, 33, 22],\n      [\"2024/05\", 23, 41, 22.5, 22, 2],\n      [\"2021/05\", 44, 82, 13, 43, 12],\n      [\"2023/05\", 19, 33, 23, 21, 89],\n      [\"2022/05\", 30, 20, 12, 34, 22],\n    ],\n    className: \"\",\n  },\n  {\n    type: ChartType.PieChart,\n    cardTitle: \"Total Sanctioned\",\n    chartOptionData: {\n      myColumns: [\n        [\"Retail\", \"Agri\", \"MSME\", \"GOLD\", \"CORP\"],\n        \"Leads Count\",\n        { role: \"style\" },\n      ],\n      chartOptions: {\n        title: `Sanctioned Amount`,\n        chartArea: { width: \"50%\" },\n        slices: {\n          0: { color: \"#622248\" },\n          1: { color: \"#109618\" },\n          2: { color: \"#3366cc\" },\n          3: { color: \"red\" },\n          4: { color: \"#ff9900\" },\n        },\n      },\n    },\n    chartData: [\n      [\"Retail\", 3445, \"red\"],\n      [\"Agri\", 3445, \"red\"],\n      [\"MSME\", 3445, \"red\"],\n      [\"Gold\", 3445, \"red\"],\n    ],\n    className: \"\",\n  },\n];\n\nexport interface DashardCardConfig {\n  type: any;\n  chartOptionData: ChartOptionsConfig;\n  chartData: Array<ChartDataType[]>;\n  cardTitle?: string;\n  className?: string;\n}\n\nexport type ChartDataType = string | number;\n\nexport interface ChartOptionsConfig {\n  // myColumns: Array<\n  //   string | ColumnsType[] | string | Record<string, string | number>\n  // >;\n  myColumns: any;\n  chartOptions: ChartAxisData;\n}\n\nexport type ColumnsType = string | number;\n\nexport interface ChartAxisData {\n  title: string;\n  chartArea: { width?: string | number; height?: string | number };\n  slices?: object;\n  hAxis?: AxisVlaues;\n  vAxis?: AxisVlaues;\n  seriesType?: string;\n  series?: object;\n}\n\nexport interface AxisVlaues {\n  title?: string;\n  minValue?: number;\n}\n\nexport interface ChartEventEmitOnSelect {\n  ev: ChartSelectionChangedEvent;\n  chartType: string;\n}\n\nexport const CardTableDataConfig = (\n  cardTableData?: CardTableDataConfig\n): CardTableDataConfig => {\n  if (cardTableData) {\n    return cardTableData;\n  } else {\n    return testCardTable;\n  }\n};\n\nexport const testCardTable = {\n  cardTitle: \"Top 5 Branches\",\n  tableColumnHeadings: [\"\", \"Retail\", \"Agri\", \"MSME\", \"Gold\"],\n  tableDataKey: [\"orgName\", \"retail\", \"agri\", \"msme\", \"gold\"],\n  tableData: [\n    {\n      orgName: \"Chennai\",\n      retail: \"849\",\n      agri: \"599\",\n      msme: \"500\",\n      gold: \"200\",\n    },\n    {\n      orgName: \"Delhi\",\n      retail: \"200\",\n      agri: \"300\",\n      msme: \"400\",\n      gold: \"150\",\n    },\n    {\n      orgName: \"Tnagar\",\n      retail: \"849\",\n      agri: \"480\",\n      msme: \"250\",\n      gold: \"600\",\n    },\n    {\n      orgName: \"Poonamale\",\n      retail: \"940\",\n      agri: \"234\",\n      msme: \"700\",\n      gold: \"400\",\n    },\n  ],\n};\n\nexport interface CardTableDataConfig {\n  cardTitle?: string;\n  tableColumnHeadings: string[];\n  tableDataKey: string[];\n  tableData: Array<Record<string, string | number>>;\n  className?: string;\n}\n\nexport interface GridTableConfigData {\n  title?: string;\n  tableHeading: string[];\n  tableDataKey: string[];\n  // tableData: Array<Record<string, string | number | []>>;\n  tableData: any;\n  className?: string;\n}\n\nexport type ChildDataType = string | number;\n\nexport const GridTableDataConfig = (\n  gridTableData?: GridTableConfigData\n): GridTableConfigData => {\n  if (gridTableData) {\n    return gridTableData;\n  } else {\n    return testGridTable;\n  }\n};\n\nexport const testGridTable: GridTableConfigData = {\n  title: \"Scheme Wise\",\n  tableHeading: [\n    \"Loan Type\",\n    \"Scheme\",\n    \"No of Acc #\",\n    \"Limit in (Lakhs)\",\n    \"OS amt in(Lakhs)\",\n  ],\n  tableData: [\n    {\n      parentName: \"Chennai\",\n      childData: [\n        {\n          tpmSeqId: 62685,\n          tpmCode: \"2\",\n          tpmModifiedDate: \"2024-04-24T07:49:20.879+0000\",\n          tpmPrdCode: \"Car Loan\",\n          schemeType: \"Car Dealer\",\n          noOfAcc: \"S14\",\n          limit: \"344\",\n          Sanctioned: \"20302\",\n        },\n        {\n          tpmSeqId: 62698,\n          tpmCode: \"2\",\n          tpmModifiedDate: \"2024-04-24T07:49:20.889+0000\",\n          tpmPrdCode: \"Car Loan\",\n          schemeType: \"Luxury Car Loan\",\n          noOfAcc: \"84\",\n          limit: \"21232\",\n          Sanctioned: \"121.45\",\n        },\n      ],\n    },\n    {\n      parentName: \"Hyderabad\",\n      childData: [\n        {\n          tpmSeqId: 62686,\n          tpmCode: \"2\",\n          tpmModifiedDate: \"2024-04-24T07:49:20.880+0000\",\n          tpmPrdCode: \"Cash Loan\",\n          schemeType: \"Property Loan\",\n          noOfAcc: \"S34\",\n          limit: \"676\",\n          Sanctioned: \"23\",\n        },\n      ],\n    },\n  ],\n  tableDataKey: [\"schemeType\", \"noOfAcc\", \"limit\", \"Sanctioned\"],\n};\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\nimport { NgxSuperDashboardComponent } from \"./ngx-super-dashboard.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { GoogleChartsModule, ScriptLoaderService } from \"angular-google-charts\";\n\n@NgModule({\n  declarations: [NgxSuperDashboardComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, GoogleChartsModule],\n  providers: [ScriptLoaderService],\n  exports: [NgxSuperDashboardComponent],\n})\nexport class NgxSuperDashboardModule {}\n"]}