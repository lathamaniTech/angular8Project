{"__symbolic":"module","version":4,"metadata":{"NgxSuperDashboardService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"NgxSuperDashboardComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"lib-ngx-super-dashboard","template":"\n    <div class=\"fields-bar\">\n      <form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmitForm()\">\n        <div class=\"grid-label-bar\" *ngIf=\"dynamicForm.value.length != 0\">\n          <ng-container\n            *ngFor=\"let field of dynamicFormFieldData; let i = index\"\n          >\n            <div\n              [ngClass]=\"field.className ? field.className + ' list' : 'list'\"\n              *ngIf=\"\n                field.lovDataList && field.lovDataList.length > 0;\n                else dynamicNonDropdown\n              \"\n            >\n              <div class=\"lable\">{{ field.lable }}<span>-</span></div>\n\n              <select\n                formControlName=\"{{ field.formControlKey }}\"\n                id=\"{{ field.formControlKey }}\"\n                (change)=\"seletedValue($event)\"\n                placeholder=\"Select\"\n              >\n                <option selected value=\"\">Select</option>\n                <option\n                  [value]=\"item.value\"\n                  *ngFor=\"let item of field.lovDataList\"\n                >\n                  {{ item.name }}\n                </option>\n              </select>\n            </div>\n\n            <ng-template #dynamicNonDropdown>\n              <div\n                [ngClass]=\"field.className ? field.className + ' list' : 'list'\"\n              >\n                <div class=\"lable\">{{ field.lable }}<span>-</span></div>\n                <input\n                  type=\"{{ field.type }}\"\n                  class=\"picker\"\n                  formControlName=\"{{ field.formControlKey }}\"\n                  id=\"{{ field.formControlKey }}\"\n                  (change)=\"seletedValue($event)\"\n                  placeholder=\"Select\"\n                />\n              </div>\n            </ng-template>\n          </ng-container>\n\n          <div class=\"list lastList\">\n            <div class=\"lable\">\n              *Accounts in Actuals <br />\n              *Ammount in Lakhs\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div class=\"grid-container\">\n      <div\n        class=\"grid-area-countCards\"\n        *ngIf=\"cardConfig && cardConfig.length > 0\"\n      >\n        <ng-container *ngFor=\"let item of cardConfig; let j = index\">\n          <div\n            [ngClass]=\"\n              item.className\n                ? item.className + ' card card-border-left'\n                : 'card card-border-left'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ item.title }}</h3>\n            </div>\n            <div class=\"card-content\">\n              <p>{{ item.value }}</p>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n\n      <div\n        [ngClass]=\"\n          gridTwoConfig && gridTwoConfig !== null && gridTwoConfig !== undefined\n            ? 'grid-area-chart'\n            : 'grid-area-chart grid-area-expand'\n        \"\n      >\n        <ng-container *ngFor=\"let chart of chartsConfig\">\n          <div\n            [ngClass]=\"\n              chart.className\n                ? chart.className + ' card card-border-bottom'\n                : 'card card-border-bottom'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ chart.cardTitle }}</h3>\n            </div>\n            <google-chart\n              style=\"width: 100%; height: 100%\"\n              [type]=\"chart.type\"\n              [data]=\"chart.chartData\"\n              [columns]=\"chart.chartOptionData.myColumns\"\n              [options]=\"chart.chartOptionData.chartOptions\"\n              (select)=\"selectedChart($event, chart.type)\"\n            ></google-chart>\n          </div>\n        </ng-container>\n\n        <ng-container\n          *ngIf=\"\n            gridOneConfig && gridOneConfig != null && gridOneConfig != undefined\n          \"\n        >\n          <div\n            [ngClass]=\"\n              gridOneConfig.className\n                ? gridOneConfig.className + 'card card-border-bottom'\n                : 'card card-border-bottom'\n            \"\n          >\n            <div class=\"card-header\">\n              <h3>{{ gridOneConfig.cardTitle }}</h3>\n            </div>\n            <div class=\"card-content\">\n              <table class=\"grid-table\">\n                <thead>\n                  <th *ngFor=\"let head of gridOneConfig.tableColumnHeadings\">\n                    {{ head }}\n                  </th>\n                </thead>\n                <tbody>\n                  <ng-container *ngIf=\"gridOneConfig.tableData; else noData\">\n                    <tr\n                      *ngFor=\"\n                        let item of gridOneConfig.tableData;\n                        let i = index\n                      \"\n                    >\n                      <td *ngFor=\"let val of gridOneConfig.tableDataKey\">\n                        {{ item[val] }}\n                      </td>\n                    </tr>\n                  </ng-container>\n                  <ng-template #noData>\n                    <tr>\n                      <td colspan=\"5\">No Data</td>\n                    </tr>\n                  </ng-template>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div\n        class=\"grid-area-tableRecords\"\n        *ngIf=\"\n          gridTwoConfig && gridTwoConfig !== null && gridTwoConfig !== undefined\n        \"\n      >\n        <div\n          [ngClass]=\"\n            gridTwoConfig.className\n              ? gridTwoConfig.className + ' card card-border-top'\n              : 'card card-border-top'\n          \"\n        >\n          <div class=\"card-header\">\n            <h3>{{ gridTwoConfig.title }}</h3>\n          </div>\n          <div class=\"card-content\">\n            <table class=\"grid-table\">\n              <thead>\n                <th *ngFor=\"let head of gridTwoConfig.tableHeading\">\n                  {{ head }}\n                </th>\n              </thead>\n              <ng-container\n                *ngIf=\"\n                  gridTwoConfig.tableData && gridTwoConfig.tableData.length > 0\n                \"\n              >\n                <tbody>\n                  <tr *ngFor=\"let parent of gridTwoConfig.tableData\">\n                    <td>\n                      {{ parent.parentName }}\n                    </td>\n                    <td\n                      [attr.colspan]=\"gridTwoConfig.tableDataKey.length\"\n                      class=\"colspan\"\n                    >\n                      <tr *ngFor=\"let item of parent.childData\">\n                        <td *ngFor=\"let key of gridTwoConfig.tableDataKey\">\n                          {{ item[key] }}\n                        </td>\n                      </tr>\n                    </td>\n                  </tr>\n                </tbody>\n              </ng-container>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  ","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":222,"character":19},"member":"OnPush"},"styles":["\n      .fields-bar {\n        width: 100vw;\n        position: fixed;\n        top: 0;\n        z-index: 999;\n        background-color: #111249;\n        display: flex;\n      }\n      .grid-label-bar {\n        grid-template-columns: auto auto auto auto auto auto auto;\n        gap: 10px;\n        padding: 5px 14px;\n        display: grid;\n        color: #fff;\n        font-size: 13px;\n      }\n\n      .grid-label-bar .list {\n        display: flex;\n        align-items: center;\n      }\n\n      .lable span {\n        margin-left: 6px;\n      }\n\n      input.picker[type=\"date\"] {\n        position: relative;\n      }\n\n      input.picker[type=\"date\"]::-webkit-calendar-picker-indicator {\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        padding: 0;\n        color: transparent;\n        background: transparent;\n      }\n\n      select,\n      input {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        background: none;\n        border: none;\n        color: #fff;\n        width: 118px;\n        padding: 0 6px;\n      }\n      select::-ms-expand {\n        display: none; /* Hide the default arrow in Internet Explorer 10 and Internet Explorer 11 */\n      }\n      select:focus-visible {\n        outline: none;\n      }\n\n      input::placeholder {\n        color: #fff;\n        opacity: 1; /* Firefox */\n      }\n      option {\n        background-color: #fff;\n        color: #000;\n      }\n      .grid-container {\n        --purple-color: #622248;\n        --card-border-width: 8px;\n      }\n      .grid-container {\n        height: auto !important;\n        display: grid;\n        grid-template-columns: auto auto auto auto auto;\n        grid-template-rows: auto auto auto;\n        gap: 12px;\n        background-color: #dddddd96;\n        padding: 7px;\n        margin-top: 3rem;\n      }\n\n      .card {\n        box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n        margin: 5px 0 12px 0;\n        text-align: center;\n        background-color: #fff;\n        width: 18vw;\n        border-radius: 8px;\n      }\n\n      .card .card-header {\n        padding: 14px;\n        border-bottom: 1px solid #ddd;\n        background: none;\n        font-weight: 600;\n        font-size: 15px;\n      }\n      .card .card-content {\n        padding: 14px;\n      }\n      .card h3 {\n        font-size: 15px;\n        margin: 0;\n      }\n      .card p {\n        font-weight: 600;\n        font-size: 15px;\n        color: #853163;\n      }\n\n      .grid-area-countCards {\n        grid-area: 1/1/2/2;\n      }\n\n      .grid-area-chart {\n        grid-area: 1/2/3/4;\n      }\n\n      .grid-area-chart .card {\n        width: 40vw;\n        height: 40vh;\n        padding-bottom: 8px;\n      }\n\n      .grid-area-tableRecords {\n        grid-area: 1/4/3/-1;\n      }\n\n      .grid-area-tableRecords .card {\n        overflow: auto;\n        width: 38vw;\n        height: 100%;\n      }\n      .grid-area-tableRecords .card-content {\n        padding: 12px 10px;\n      }\n\n      .grid-table {\n        font-weight: 400;\n        font-size: 12px;\n        border-collapse: collapse;\n        width: 100%;\n        height: auto;\n        overflow: auto;\n        border: 1px solid #ddd;\n      }\n\n      .grid-table tr,\n      .grid-table th {\n        border-bottom: 1px solid #ddd;\n      }\n      .grid-table .colspan tr:last-child {\n        border: none;\n      }\n      .grid-table td {\n        padding: 5px 0;\n      }\n      .colspan td {\n        border: none !important;\n        width: 7vw !important;\n      }\n\n      .grid-table td:nth-child(1),\n      .grid-table th:nth-child(1) {\n        border-right: 1px solid #f2f2f2;\n        width: 10vw;\n      }\n\n      .grid-table th {\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: center;\n        width: 7vw;\n      }\n\n      @media (max-width: 850px) {\n        .grid-container {\n          gap: 10px;\n        }\n      }\n\n      @media (max-width: 1089px) {\n        .grid-label-bar .lastList {\n          display: none;\n        }\n      }\n\n      @media (max-width: 786px) {\n        .grid-label-bar {\n          grid-template-columns: auto auto auto;\n        }\n      }\n      @media (max-width: 580px) {\n        .grid-label-bar {\n          grid-template-columns: auto auto;\n        }\n        .card-header {\n          font-size: 14px;\n        }\n        .grid-container {\n          grid-template-columns: auto;\n          grid-template-rows: auto;\n          gap: 0px;\n        }\n        .grid-area-countCards,\n        .grid-area-chart,\n        .grid-area-tableRecords {\n          grid-area: auto;\n        }\n        .grid-area-chart .card,\n        .grid-area-countCards .card,\n        .grid-area-tableRecords .card {\n          width: 100%;\n          height: auto;\n        }\n        .grid-area-countCards .card-content.chart {\n          height: auto;\n        }\n      }\n      .card-border-left {\n        border-left-color: var(--purple-color);\n        border-left-width: var(--card-border-width) !important;\n        border-left-style: solid;\n      }\n      .card-border-bottom {\n        border-bottom-color: var(--purple-color);\n        border-bottom-width: var(--card-border-width) !important;\n        border-bottom-style: solid;\n      }\n      .grid-area-expand {\n        grid-area: 1/2/3/-1;\n      }\n      .grid-area-expand .card {\n        width: 100%;\n        height: 54vh;\n      }\n    "]}]}],"members":{"dynamicFormFieldData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":467,"character":3}}]}],"cardConfig":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":470,"character":3}}]}],"chartsConfig":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":472,"character":3}}]}],"gridOneConfig":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":473,"character":3}}]}],"gridTwoConfig":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":474,"character":3}}]}],"onSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":476,"character":3}}]}],"onSubmit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":477,"character":3}}]}],"onSelectChart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":479,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":481,"character":26}]}],"ngOnInit":[{"__symbolic":"method"}],"typeCheck":[{"__symbolic":"method"}],"createForm":[{"__symbolic":"method"}],"seletedValue":[{"__symbolic":"method"}],"onSubmitForm":[{"__symbolic":"method"}],"selectedChart":[{"__symbolic":"method"}]}},"DynamicFieldsConfiguration":{"__symbolic":"error","message":"Lambda not supported","line":525,"character":42,"module":"./lib/ngx-super-dashboard.component"},"testFieldData":[{"lable":"Zone","formControlKey":"zone","lovDataList":[]},{"lable":"Branch","formControlKey":"branch","lovDataList":[]},{"lable":"Teams","formControlKey":"teams","lovDataList":[]},{"lable":"Product","formControlKey":"product","lovDataList":[]},{"lable":"Start Date","formControlKey":"startDate","type":"date"},{"lable":"End Date","formControlKey":"endDate","type":"date"}],"AppLOVData":{"__symbolic":"interface"},"DynamicFieldsData":{"__symbolic":"interface"},"SelectedFieldValueEmit":{"__symbolic":"interface"},"SetDataOption":{"__symbolic":"interface"},"DynamicCardsConfiguration":{"__symbolic":"error","message":"Lambda not supported","line":567,"character":41,"module":"./lib/ngx-super-dashboard.component"},"testCardData":[{"title":"Total Proposals","value":700},{"title":"On Process","value":230},{"title":"Sanctioned","value":300},{"title":"Rejected","value":254},{"title":"Opened prending for > 30 days","value":143},{"title":"Disbursed","value":120}],"DynamicCardsData":{"__symbolic":"interface"},"DashboardChartsConfig":{"__symbolic":"error","message":"Lambda not supported","line":589,"character":37,"module":"./lib/ngx-super-dashboard.component"},"testChartsData":{"__symbolic":"error","message":"Name expected","line":642,"character":10,"context":{"received":"0"},"module":"./lib/ngx-super-dashboard.component"},"DashardCardConfig":{"__symbolic":"interface"},"ChartDataType":{"__symbolic":"interface"},"ChartOptionsConfig":{"__symbolic":"interface"},"ColumnsType":{"__symbolic":"interface"},"ChartAxisData":{"__symbolic":"interface"},"AxisVlaues":{"__symbolic":"interface"},"ChartEventEmitOnSelect":{"__symbolic":"interface"},"CardTableDataConfig":{"__symbolic":"interface"},"testCardTable":{"cardTitle":"Top 5 Branches","tableColumnHeadings":["","Retail","Agri","MSME","Gold"],"tableDataKey":["orgName","retail","agri","msme","gold"],"tableData":[{"orgName":"Chennai","retail":"849","agri":"599","msme":"500","gold":"200"},{"orgName":"Delhi","retail":"200","agri":"300","msme":"400","gold":"150"},{"orgName":"Tnagar","retail":"849","agri":"480","msme":"250","gold":"600"},{"orgName":"Poonamale","retail":"940","agri":"234","msme":"700","gold":"400"}]},"GridTableConfigData":{"__symbolic":"interface"},"ChildDataType":{"__symbolic":"interface"},"GridTableDataConfig":{"__symbolic":"error","message":"Lambda not supported","line":765,"character":35,"module":"./lib/ngx-super-dashboard.component"},"testGridTable":{"title":"Scheme Wise","tableHeading":["Loan Type","Scheme","No of Acc #","Limit in (Lakhs)","OS amt in(Lakhs)"],"tableData":[{"parentName":"Chennai","childData":[{"tpmSeqId":62685,"tpmCode":"2","tpmModifiedDate":"2024-04-24T07:49:20.879+0000","tpmPrdCode":"Car Loan","schemeType":"Car Dealer","noOfAcc":"S14","limit":"344","Sanctioned":"20302"},{"tpmSeqId":62698,"tpmCode":"2","tpmModifiedDate":"2024-04-24T07:49:20.889+0000","tpmPrdCode":"Car Loan","schemeType":"Luxury Car Loan","noOfAcc":"84","limit":"21232","Sanctioned":"121.45"}]},{"parentName":"Hyderabad","childData":[{"tpmSeqId":62686,"tpmCode":"2","tpmModifiedDate":"2024-04-24T07:49:20.880+0000","tpmPrdCode":"Cash Loan","schemeType":"Property Loan","noOfAcc":"S34","limit":"676","Sanctioned":"23"}]}],"tableDataKey":["schemeType","noOfAcc","limit","Sanctioned"]},"NgxSuperDashboardModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":6,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"NgxSuperDashboardComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":8,"character":12},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":8,"character":26},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":8,"character":39},{"__symbolic":"reference","module":"angular-google-charts","name":"GoogleChartsModule","line":8,"character":60}],"providers":[{"__symbolic":"reference","module":"angular-google-charts","name":"ScriptLoaderService","line":9,"character":14}],"exports":[{"__symbolic":"reference","name":"NgxSuperDashboardComponent"}]}]}],"members":{}}},"origins":{"NgxSuperDashboardService":"./lib/ngx-super-dashboard.service","NgxSuperDashboardComponent":"./lib/ngx-super-dashboard.component","DynamicFieldsConfiguration":"./lib/ngx-super-dashboard.component","testFieldData":"./lib/ngx-super-dashboard.component","AppLOVData":"./lib/ngx-super-dashboard.component","DynamicFieldsData":"./lib/ngx-super-dashboard.component","SelectedFieldValueEmit":"./lib/ngx-super-dashboard.component","SetDataOption":"./lib/ngx-super-dashboard.component","DynamicCardsConfiguration":"./lib/ngx-super-dashboard.component","testCardData":"./lib/ngx-super-dashboard.component","DynamicCardsData":"./lib/ngx-super-dashboard.component","DashboardChartsConfig":"./lib/ngx-super-dashboard.component","testChartsData":"./lib/ngx-super-dashboard.component","DashardCardConfig":"./lib/ngx-super-dashboard.component","ChartDataType":"./lib/ngx-super-dashboard.component","ChartOptionsConfig":"./lib/ngx-super-dashboard.component","ColumnsType":"./lib/ngx-super-dashboard.component","ChartAxisData":"./lib/ngx-super-dashboard.component","AxisVlaues":"./lib/ngx-super-dashboard.component","ChartEventEmitOnSelect":"./lib/ngx-super-dashboard.component","CardTableDataConfig":"./lib/ngx-super-dashboard.component","testCardTable":"./lib/ngx-super-dashboard.component","GridTableConfigData":"./lib/ngx-super-dashboard.component","ChildDataType":"./lib/ngx-super-dashboard.component","GridTableDataConfig":"./lib/ngx-super-dashboard.component","testGridTable":"./lib/ngx-super-dashboard.component","NgxSuperDashboardModule":"./lib/ngx-super-dashboard.module"},"importAs":"ngx-super-dashboard"}